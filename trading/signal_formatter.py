# trading/signal_formatter.py
def format_signal_message(analysis_result: dict) -> str:
    """–§–æ—Ä–º–∞—Ç–∏—Ä—É–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –∞–Ω–∞–ª–∏–∑–∞ –≤ —á–∏—Ç–∞–µ–º–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ"""

    if not analysis_result or 'symbol' not in analysis_result:
        return "–û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞"

    message_parts = [
        f"üíπ {analysis_result['symbol']} –ê–Ω–∞–ª–∏–∑",
        f"‚è∞ {analysis_result['timestamp'].strftime('%Y-%m-%d %H:%M:%S')}",
        f"üíµ –¶–µ–Ω–∞: {analysis_result['latest_price']:.2f}",
        f"üìä –û–±—ä–µ–º: {analysis_result['latest_volume']:.2f}",
        "",
        "üîç –†—ã–Ω–æ—á–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç:",
        f"- –¢—Ä–µ–Ω–¥: {analysis_result['context']['trend']}",
        f"- –°–∏–ª–∞ —Ç—Ä–µ–Ω–¥–∞: {analysis_result['context']['strength']:.2f}",
        f"- –í–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å: {analysis_result['context']['volatility']}",
        f"- –°—Ç–∞—Ç—É—Å –æ–±—ä–µ–º–∞: {analysis_result['context']['volume']}",
        f"- –ü–æ–¥—Ö–æ–¥–∏—Ç –¥–ª—è —Ç–æ—Ä–≥–æ–≤–ª–∏: {
            '‚úÖ' if analysis_result['context']['suitable_for_trading'] else '‚ùå'}",
    ]

    if analysis_result['signals']:
        message_parts.extend([
            "",
            "üéØ –°–∏–≥–Ω–∞–ª—ã:",
        ])
        for signal in analysis_result['signals']:
            message_parts.extend([
                f"–¢–∏–ø: {signal['type'].upper()}",
                f"–ü—Ä–∏—á–∏–Ω–∞: {signal['reason']}",
                f"–í—Ö–æ–¥: {signal['entry']:.2f}",
                f"–°—Ç–æ–ø-–ª–æ—Å—Å: {signal['stop_loss']:.2f}",
                f"–¢–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç: {signal['take_profit']:.2f}",
                f"–°–∏–ª–∞ —Å–∏–≥–Ω–∞–ª–∞: {signal['strength']:.2f}",
                ""
            ])
    else:
        message_parts.extend(["", "üî¥ –ù–µ—Ç –∞–∫—Ç–∏–≤–Ω—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤"])

    return "\n".join(message_parts)
